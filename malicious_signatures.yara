rule Malicious_Signatures {
    strings:
        $signature1 = { 4D 5A } // Header of a Windows executable file (PE format)
         $signature2 = { 5C 2E 65 78 } // The ".ex" fragment specific to a malicious executable file extension
         $signature3 = { 2E 65 78 65 } // The ".exe" fragment specific to a malicious executable file extension
         $signature4 = { 2F 2F 20 20 } // Fragment "// " specific to a malicious comment
         $signature5 = { 25 45 4F 46 } // The "%EOF" fragment specific to a malicious PDF file
         $signature6 = { 3C 21 44 4F } // The "<!DO" fragment specific to a malicious HTML document
         $signature7 = { 3C 73 63 72 } // The "<scr" fragment specific to a malicious JavaScript code
         $signature8 = { 7B 7B 20 3C } // The "{{ <" fragment specific to a malicious templating template
         $signature9 = { 7F 45 4C 46 } // Header of a Linux/Unix executable file (ELF format)
         $signature10 = { 68 74 74 70 } // The "http" fragment specific to a malicious URL
         $signature11 = { 68 74 74 70 } // The "https" fragment specific to a malicious URL
         $signature12 = { 53 50 52 45 } // The "SPRE" fragment specific to a malicious payload
         $signature13 = { 25 50 44 46 } // The "%PDF" fragment specific to a malicious PDF file
         $signature14 = { 5B 48 4F 4F } // The "[HOO" fragment specific to a malicious payload
         $signature15 = { 3C 3F 78 6D } // Fragment "<?xm" specific to a malicious XML document
         $signature16 = { 4D 53 43 46 } // The "MSCF" fragment specific to a Windows executable file
         $signature17 = { 3C 73 76 67 } // The "<svg" fragment specific to a malicious SVG document
         $signature18 = { 5F 5F 49 4E } // The "__IN" fragment specific to a malicious payload
         $signature19 = { 2F 2A 0D 0A } // The "/*\r\n" fragment specific to a malicious C comment
         $signature20 = { 23 21 2F 62 } // The fragment "#!/b" specific to a malicious script
         $signature21 = { 31 C0 31 DB } // Beginning fragment of a malicious shellcode
         $signature22 = { 2F 2F 2F 2F } // Fragment "////" specific to a malicious path
         $signature23 = { 0D 0A 53 4F } // The "\r\nSO" fragment specific to a DOS executable file
         $signature24 = { E8 20 00 00 } // Call statement to an exploit-specific routine
         $signature25 = { 5C 2F 5C 2F } // Fragment "//" specific to a malicious path
         $signature26 = { 0E 1F BA 0E } // Header of a Windows executable file (MZ format)
         $signature27 = { 25 21 20 2F } // The "%!/" fragment specific to a malicious PostScript file
         $signature28 = { 3C 21 45 4E } // Fragment "<!EN" specific to a malicious HTML document
         $signature29 = { 5C 78 7B 5C } // The "\x{" fragment specific to a malicious hex sequence
         $signature30 = { 6A 61 76 61 } // The "java" fragment specific to a malicious Java code
         $signature31 = { 5C 78 73 5C } // The "\x\s" fragment specific to a malicious hex sequence
         $signature32 = { 5C 78 78 5C } // The "\xx" fragment specific to a malicious hex sequence
         $signature33 = { 5C 78 74 5C } // The "\xt" fragment specific to a malicious hex sequence
         $signature34 = { 3C 73 63 72 } // The "<scr" fragment specific to a malicious JavaScript code
         $signature35 = { 3C 73 74 79 } // The "<sty" fragment specific to a malicious CSS style
         $signature36 = { 6D 61 6C 77 } // The "malw" fragment specific to a malicious payload
         $signature37 = { 3C 73 76 67 } // The "<svg" fragment specific to a malicious SVG document
         $signature38 = { 7B 7B 73 74 } // The "{{st" fragment specific to a malicious templating template
         $signature39 = { 23 69 66 64 } // The "#ifd" fragment specific to a malicious C/C++ code
         $signature40 = { 3C 6D 61 72 } // The "<mar" fragment specific to a malicious HTML document
         $signature41 = { 41 68 65 6C 6C } // The "hell" fragment specific to a malicious payload
         $signature42 = { 42 63 61 6C 63 } // The "calc" fragment specific to a malicious payload
         $signature43 = { 43 73 63 72 69 } // The "write" fragment specific to a malicious payload
         $signature44 = { 44 61 6C 65 72 } // The "aler" fragment specific to a malicious payload
         $signature45 = { 45 73 63 72 69 } // The "write" fragment specific to a malicious payload
         $signature46 = { 46 70 74 20 63 } // Fragment "pt c" specific to a malicious payload
         $signature47 = { 47 6F 70 65 6E } // The "open" fragment specific to a malicious payload
         $signature48 = { 48 77 72 69 74 } // The "write" fragment specific to a malicious payload
         $signature49 = { 49 65 78 65 63 } // The "exec" fragment specific to a malicious payload
         $signature50 = { 50 64 6F 63 75 } // The "doc" fragment specific to a malicious payload
        $signature51 = { 0F 0E 0D 0C } // The code snippet that indicates a security disable process
         $signature52 = { 7E 21 21 7E } // Snippet indicating JavaScript code executed in an infinite loop
         $signature53 = { 5B 21 5D 28 } // Snippet indicating malicious PowerShell code
         $signature54 = { 1F 8B 08 00 } // Header of a GZIP compressed file
         $signature55 = { 7F 45 4C 46 } // Header of an ELF executable file (Linux/Unix)
         $signature56 = { 25 50 44 46 } // Header of a malicious PDF file
         $signature57 = { 30 31 63 64 } // Fragment "01cd" specific to a malicious encoding
         $signature58 = { 3C 3F 78 6D } // Fragment "<?xm" specific to a malicious XML document
         $signature59 = { 5F 30 6F 4E } // The "_0oN" fragment specific to a malicious filename
         $signature60 = { 2A 2F 3C 69 } // The "*/<i" fragment specific to a malicious HTML comment
         $signature61 = { 23 69 6E 63 } // The "#inc" fragment specific to a malicious C/C++ code
         $signature62 = { 2B 43 7B 7D } // The "+C{}" fragment specific to a malicious C# code template
         $signature63 = { 2F 2A 20 20 } // Fragment "/* " specific to a malicious code comment
         $signature64 = { 26 6C 74 3B } // The "<" fragment specific to a malicious HTML code
         $signature65 = { 7B 0A 69 66 } // The "{if" fragment specific to a malicious PHP code
         $signature66 = { 25 63 6F 6D } // The "%com" fragment specific to a malicious WMI object
         $signature67 = { 2F 2F 0D 0A } // The "//\r\n" fragment specific to a malicious comment line
         $signature68 = { 2F 2F 20 20 } // The fragment "// " specific to a malicious comment line
         $signature69 = { 3A 20 24 7B } // Fragment ": ${" specific to a malicious shell script
         $signature70 = { 60 73 79 73 } // The "`sys" fragment specific to a malicious PowerShell command
	 $signature71 = { 28 65 76 61 } // The "(eva" fragment specific to a malicious code evaluation
         $signature72 = { 2D 6C 7A 6D } // The "-lzm" fragment specific to a malicious LZMA compressed file
         $signature73 = { 2E 62 61 74 } // The ".bat" fragment specific to a malicious batch file
         $signature74 = { 3A 20 7C 20 } // Fragment ": | " specific to a malicious payload
         $signature75 = { 25 20 63 6F } // The "% co" fragment specific to a malicious SQL formatted code
         $signature76 = { 3C 73 76 67 } // The "<svg" fragment specific to a malicious SVG file
         $signature77 = { 3D 22 64 65 } // The "=de" fragment specific to a malicious HTML tag attribute
         $signature78 = { 22 73 63 72 } // The "scr" fragment specific to a malicious HTML script attribute
         $signature79 = { 20 2D 72 20 } // The " -r " fragment specific to a malicious command line option
         $signature80 = { 2F 2F 2F 2F } // The "////" fragment specific to a malicious comment line
         $signature81 = { 2F 2A 20 20 } // The fragment "/* " specific to a malicious code comment
         $signature82 = { 23 20 65 78 } // The "# ex" fragment specific to a malicious Perl command
         $signature83 = { 5F 4D 41 47 } // The "_MAG" fragment specific to a malicious magic file
         $signature84 = { 7B 7D 3B 0D } // Fragment "{};\r" specific to a block of malicious code
         $signature85 = { 40 65 78 65 } // The "@exe" fragment specific to a malicious executable file
         $signature86 = { 2D 2D 3E 20 } // The "--> " fragment specific to a sequence of malicious HTML comments
         $signature87 = { 22 68 74 74 } // The "htt" fragment specific to a malicious URL
         $signature88 = { 20 2D 2D 3E } // The " -->" fragment specific to a malicious HTML comment sequence
         $signature89 = { 7B 7B 0D 0A } // Fragment "{{\r\n" specific to a malicious code template
         $signature90 = { 2D 64 65 76 } // The "-dev" fragment specific to a malicious device driver
         $signature91 = { 23 2F 62 69 } // The "#/bi" fragment specific to a malicious Bash script
         $signature92 = { 24 28 29 3B } // Fragment "$();" specific to a malicious shell script
         $signature93 = { 28 63 61 74 } // The "(cat") fragment specific to a malicious Perl script
         $signature94 = { 3C 69 6D 67 } // The "<img" fragment specific to a malicious HTML image tag
         $signature95 = { 7B 7B 20 7B } // Fragment "{{ {" specific to a malicious code template
         $signature96 = { 5F 5F 6D 61 } // Fragment "__ma" specific to a malicious variable
         $signature97 = { 2E 74 78 74 } // The ".txt" fragment specific to a malicious text file
         $signature98 = { 21 0A 65 63 } // The "!\nec" fragment specific to a malicious Perl script
         $signature99 = { 2D 63 6F 64 } // The "-code" fragment specific to a malicious code source file
         $signature100 = { 25 73 20 7B } // The fragment "%s {" specific to a malicious C formatting template
   
    condition:
        any of them
}
